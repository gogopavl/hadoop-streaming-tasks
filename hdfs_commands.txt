// HDFS COMMANDS

cat – copy files to stdout, similar to UNIX cat command:
hdfs dfs -cat /user/$USER/data/input/example1.txt

copyFromLocal – copy single source, or multiple sources from local file system to the destination filesystem. Source must be a local file reference:
hdfs dfs -copyFromLocal <localfile> /user/$USER/file1

copyToLocal – copy files to the local file system. Destination must be a local file reference.
hdfs dfs -copyToLocal /user/$USER/file1 <localfile>

Options:
-ignoreCrc – files that fail the CRC check will be copied.
-crc – files and CRCs will be copied.

cp – copy files from source to destination. This command allows multiple sources as well in which case the destination must be a directory. Similar to UNIX cp command.
hdfs dfs -cp /user/$USER/file1 /user/$USER/file2

getmerge – take a source directory and a destination file as input and concatenate files in src into the destination local file. Optionally addnl can be set to enable adding a newline character at the end of each file.
hdfs dfs -getmerge /data/labs/example-data ~/result_file

ls – for a file returns stat on the file with the format: filename num_replicas size modification_date modification_time permissions userid groupid
For a directory it returns list of its direct children as in UNIX, with the format: dirname <dir> modification_time modification_time permissions userid groupid
hdfs dfs -ls /user/$USER
You can also pass -R for recursive listing.

mkdir – create a directory.
hdfs dfs -mkdir /user/$USER/deleteme
You can pass -p to make directories along a path
hdfs dfs -mkdir -p /user/$USER/deleteme/and/this

mv – move files from source to destination similar to UNIX mv command. This command allows multiple sources as well in which case the destination needs to be a directory. Moving files across filesystems is not permitted.
hdfs dfs -mv /user/$USER/file1 /user/$USER/file2

rm – delete files, similar to UNIX rm command. Only deletes empty directories and files.
hdfs dfs -rm /user/$USER/file1
Also supports -r to recursively delete files like rm -r on UNIX.

tail – Displays last kilobyte of the file to stdout. Similar to UNIX tail command.
hdfs dfs -tail /user/$USER/file1
Options:
-f output appended data as the file grows (follow)

test – perform various test.
hdfs dfs -test -e /user/$USER/file1
Options:
-e check to see if the file exists. Return 0 if true.
-z check to see if the file is zero length. Return 0 if true.
-d check return 1 if the path is directory else return 0.
-test returns the value of its test (0 or 1) to the environment variable $?, to view its value enter the following into your terminal:
echo $?

touchz – create a file of zero length. Similar to UNIX touch command.
hdfs dfs -touchz /user/$USER/file1
